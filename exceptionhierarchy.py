from tkinter import *
from tkinter import ttk

window = Tk()
window.geometry('200x200+350+250')
# noinspection PyRedundantParentheses
treeview = ttk.Treeview(window)
treeview.pack(expand=True, fill='both')
treeview.insert('', '0', 'BaseException', text='BaseException')
treeview.insert('BaseException', '1', 'Exception', text='Exception')
treeview.insert('Exception', '2', 'ArithmeticError', text='ArithmeticError')
treeview.insert('ArithmeticError', '3', 'FloatingPointError', text='FloatingPointError')
treeview.insert('FloatingPointError', '100', 'About : FloatingPointError', text='FloatingPointError indicates that something has gone wrong with a floating point calculation.')
treeview.insert('ArithmeticError', '4', 'OverflowError', text='OverflowError')
treeview.insert('OverflowError', '101', 'About : Overflow Error', text='OverflowError indicates that a arithmetic operation is taking longer than the Python runtime limit.')
treeview.insert('OverflowError', '102', 'About : OverflowError', text='The operations that OverflowError is called for usually involve large Float values because large integers would raise a MemoryError instead.')
treeview.insert('ArithmeticError', '5', 'ZeroDivisionError', text='ZeroDivisionError')
treeview.insert('ZeroDivisionError', '103', 'About : ZeroDivisionError', text='ZeroDivisionError is called when attempting to divide by zero because you can\'t divide by zero in normal math.')
treeview.insert('Exception', '6', 'AssertionError', text='AssertionError')
treeview.insert('AssertionError', '104', 'About : AssertionError', text='AssertionError usually indicates that a assert() failed.')
treeview.insert('Exception', '7', 'AttributeError', text='AttributeError')
treeview.insert('AttributeError', '105', 'About : AttributeError', text='AttributeError is raised when an invalid attribute reference is made, or when an attribute assignment fails.')
treeview.insert('Exception', '8', 'BufferError', text='BufferError')
treeview.insert('BufferError', '106', 'About : BufferError', text='BufferError is raised when a problem arises while working with any sort of memory buffer within Python.')
treeview.insert('Exception', '9', 'EOFError', text='EOFError')
treeview.insert('EOFError', '107', 'About : EOFError', text='EOFError is called when the input() function is interrupted.')
treeview.insert('Exception', '10', 'ImportError', text='ImportError')
treeview.insert('ImportError', '11', 'ModuleNotFoundError', text='ModuleNotFoundError')
treeview.insert('ModuleNotFoundError', '108', 'About : ModuleNotFoundError', text='ModuleNotFoundError indicates that a module that is requested to be imported is not found.')
treeview.insert('Exception', '12', 'LookupError', text='LookupError')
treeview.insert('LookupError', '13', 'IndexError', text='IndexError')
treeview.insert('LookupError', '14', 'KeyError', text='KeyError')
treeview.insert('KeyError', '109', 'About : KeyError', text='KeyError occurs when a reference to a key within a hash is invalid or missing.')
treeview.insert('Exception', '15', 'MemoryError', text='MemoryError')
treeview.insert('MemoryError', '110', 'About : MemoryError', text='MemoryError indicates that the interpreter has completely run out of memory and needs to recover.')
treeview.insert('Exception', '16', 'NameError', text='NameError')
treeview.insert('NameError', '17', 'UnboundLocalError', text='UnboundLocalError')
treeview.insert('UnboundLocalError', '111', 'About : UnboundLocalError', text='UnboundLocalError is raised when a local variable is referenced before it has been assigned.')
treeview.insert('Exception', '18', 'OSError', text='OSError')
treeview.insert('OSError', '19', 'BlockingIOError', text='BlockingIOError')
treeview.insert('BlockingIOError', '112', 'About : BlockingIOError', text='BlockingIOError is raised when an input/output operation fails.')
treeview.insert('OSError', '20', 'ChildProcessError', text='ChildProcessError')
treeview.insert('ChildProcessError', '113', 'About : ChildProcessError', text='ChildProcessError is raised when an operation on a child process failed.')
treeview.insert('OSError', '21', 'ConnectionError', text='ConnectionError')
treeview.insert('ConnectionError', '22', 'BrokenPipeError', text='BrokenPipeError')
treeview.insert('BrokenPipeError', '114', 'About : BrokenPipeError', text='BrokenPipeError is raised when trying to write on  pipe while the other end has been closed or trying to write on a socket which has been shut down for writing.')
treeview.insert('ConnectionError', '23', 'ConnectionAbortedError', text='ConnectionAbortedError')
treeview.insert('ConnectionAbortedError', '115', 'About : ConnectionAbortedError', text='ConnectionAbortedError is raised when a connection attempt is aborted by the peer.')
treeview.insert('ConnectionError', '24', 'ConnectionRefusedError', text='ConnectionRefusedError')
treeview.insert('ConnectionRefusedError', '116', 'About : ConnectionRefusedError', text='ConnectionRefusedError is raised when a connection is refused by the peer.')
treeview.insert('ConnectionError', '25', 'ConnectionResetError', text='ConnectionResetError')
treeview.insert('ConnectionResetError', '117', 'About : ConnectionResetError', text='ConnectionResetError is raised when a connection is reset by the peer.')
treeview.insert('OSError', '26', 'FileExistsError', text='FileExistsError')
treeview.insert('FileExistsError', '118', 'About : FileExistsError', text='FileExistsError is raised when trying to create a new file or directory that already exists.')
treeview.insert('OSError', '27', 'FileNotFoundError', text='FileNotFoundError')
treeview.insert('FileNotFoundError', '119', 'About : FileNotFoundError', text='FileNotFoundError is raised when a file or directory that is requested doesn\'t')
treeview.insert('OSError', '28', 'InterruptedError', text='InterruptedError')
treeview.insert('InterruptedError', '120', 'About : InterruptedError', text='InterruptedError is raised when a system call is interrupted by an incoming message.')
treeview.insert('OSError', '29', 'IsADirectoryError', text='IsADirectoryError')
treeview.insert('IsADirectoryError', '121', 'About : IsADirectoryError', text='IsADirectoryError is raised when a file operation is requested on a directory.')
treeview.insert('OSError', '30', 'NotADirectoryError', text='NotADirectoryError')
treeview.insert('NotADirectoryError', '121', 'About : NotADirectoryError', text='NotADirectoryError is raised when a directory operation is requested on something that is not a directory.')
treeview.insert('OSError', '31', 'PermissionError', text='PermissionError')
treeview.insert('PermissionError', '122', 'About : PermissionError', text='PermissionError is raised when trying to do an action without the adequate access rights.')
treeview.insert('OSError', '32', 'ProcessLookupError', text='ProcessLookupError')
treeview.insert('ProcessLookupError', '123', 'About : ProcessLookupError', text='ProcessLookupError is raised when a given process does not exist.')
treeview.insert('OSError', '33', 'TimeoutError', text='TimeoutError')
treeview.insert('TimeoutError', '124', 'About : TimeoutError', text='TimeoutError is raised when a system function timed out at the system level.')
treeview.insert('Exception', '34', 'ReferenceError', text='ReferenceError')
treeview.insert('ReferenceError', '125', 'About : ReferenceError', text='ReferenceError is raised when a weak reference proxy is used to access an attribute that has already been garbage collected.')
treeview.insert('Exception', '35', 'RuntimeError', text='RuntimeError')
treeview.insert('RuntimeError', '36', 'NotImplementedError', text='NotImplementedError')
treeview.insert('NotImplementedError', '126', 'About : NotImplementedError', text='In user defined base classes, abstract methods should raise this exception when they require derived classes to override the method.')
treeview.insert('NotImplementedError', '128', 'About : NotImplementedError2', text='Or while the class is being developed to indicate that the real implementation still needs to be added.')
treeview.insert('RuntimeError', '37', 'RecursionError', text='RecursionError')
treeview.insert('RecursionError', '129', 'About : RecursionError', text='RecursionError is raised when the interpreter detects that the maximum recursion depth is exceeded.')
treeview.insert('Exception', '38', 'StopIteration', text='StopIteration')
treeview.insert('StopIteration', '130', 'About : StopIteration', text='StopIteration is raised by the next() function and an iterator\'s __next__() method to signal that there are no further items produced from the iterator.')
treeview.insert('Exception', '39', 'StopAsyncIteration', text='StopAsyncIteration')
treeview.insert('StopAsyncIteration', '131', 'About : StopAsyncIteration', text='Must be raised by __anext__() method of an asynchronous iterator object to stop the iteration.')
treeview.insert('Exception', '40', 'SyntaxError', text='SyntaxError')
treeview.insert('SyntaxError', '41', 'IndentationError', text='IndentationError')
treeview.insert('IndentationError', '42', 'TabError', text='TabError')
treeview.insert('TabError', '132', 'About : TabError', text='This is raised when indentation is inconsistent.')
treeview.insert('Exception', '43', 'SystemError', text='SystemError')
treeview.insert('SystemError', '133', 'About : SystemError', text='SystemError is raised when the interpreter finds an internal error but it is not serious enough to exit the interpreter.')
treeview.insert('Exception', '44', 'TypeError', text='TypeError')
treeview.insert('TypeError', '134', 'About : TypeError', text='TypeError is raised when an operation or function is applied to an object of inappropriate type.')
treeview.insert('Exception', '45', 'ValueError', text='ValueError')
treeview.insert('ValueError', '46', 'UnicodeError', text='UnicodeError')
treeview.insert('UnicodeError', '47', 'UnicodeDecodeError', text='UnicodeDecodeError')
treeview.insert('UnicodeDecodeError', '135', 'About : UnicodeDecodeError', text='UnicodeDecodeError means that an error occurred while decoding Unicode.')
treeview.insert('UnicodeError', '48', 'UnicodeEncodeError', text='UnicodeEncodeError')
treeview.insert('UnicodeEncodeError', '136', 'About : UnicodeEncodeError', text='UnicodeEncodeError occurs when an error occurs while encoding Unicode.')
treeview.insert('UnicodeError', '49', 'UnicodeTranslateError', text='UnicodeTranslateError')
treeview.insert('UnicodeTranslateError', '137', 'About : UnicodeTranslateError', text='UnicodeTranslateError occurs when an issue occurs while translating Unicode.')
treeview.insert('Exception', '50', 'Warning', text='Warning')
treeview.insert('Warning', '51', 'BytesWarning', text='BytesWarning')
treeview.insert('BytesWarning', '138', 'About : BytesWarning', text='BytesWarning is used for warnings related to bytes & bytearray.')
treeview.insert('Warning', '52', 'DeprecationWarning', text='DeprecationWarning')
treeview.insert('DeprecationWarning', '139', 'About : DeprecationWarning', text='DeprecationWarning is a base class for warnings about deprecated features.')
treeview.insert('Warning', '53', 'FutureWarning', text='FutureWarning')
treeview.insert('FutureWarning', '140', 'About : FutureWarning', text='FutureWarning is a base class for warnings about constructs that will change semantically in the future.')
treeview.insert('Warning', '54', 'ImportWarning', text='ImportWarning')
treeview.insert('ImportWarning', '141', 'About : ImportWarning', text='ImportWarning is a base class for warnings about probable mistakes in module imports.')
treeview.insert('Warning', '55', 'PendingDeprecationWarning', text='PendingDeprecationWarning')
treeview.insert('PendingDeprecationWarning', '142', 'About : PendingDeprecationWarning', text='PendingDeprecationWarning is a base class for warnings about features which will be deprecated in the future.')
treeview.insert('Warning', '56', 'ResourceWarning', text='ResourceWarning')
treeview.insert('ResourceWarning', '143', 'About : ResourceWarning', text='ResourceWarning is a base class for warnings related to resource usage.')
treeview.insert('Warning', '57', 'RuntimeWarning', text='RuntimeWarning')
treeview.insert('RuntimeWarning', '144', 'About : RuntimeWarning', text='RuntimeWarning is a base class for warnings about dubious runtime behavior.')
treeview.insert('Warning', '58', 'SyntaxWarning', text='SyntaxWarning')
treeview.insert('SyntaxWarning', '145', 'About : SyntaxWarning', text='SyntaxWarning is a base class for warnings about dubious syntax.')
treeview.insert('Warning', '59', 'UnicodeWarning', text='UnicodeWarning')
treeview.insert('UnicodeWarning', '146', 'About : UnicodeWarning', text='UnicodeWarning is a base class for warnings related to Unicode.')
treeview.insert('Warning', '60', 'UserWarning', text='UserWarning')
treeview.insert('UserWarning', '147', 'About : UserWarning', text='UserWarning is a base class for warnings generated by user code.')
treeview.insert('Exception', '61', 'GeneratorExit', text='GeneratorExit')
treeview.insert('GeneratorExit', '148', 'About : GeneratorExit', text='GeneratorExit is raised when a generator or coroutine is closed.')
treeview.insert('Exception', '62', 'KeyboardInterrupt', text='KeyboardInterrupt')
treeview.insert('KeyboardInterrupt', '149', 'About : KeyboardInterrupt', text='KeyboardInterrupt is raised when the user hits the interrupt key.')
treeview.insert('Exception', '63', 'SystemExit', text='SystemExit')
treeview.insert('SystemExit', '150', 'About : SystemExit', text='SystemExit is raised by the sys.exit() function and if not handled, causes the python interpreter to quit.')
Button(window, text='Close', command=window.destroy).pack()
window.mainloop()
